<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="DispatchingMapper">
	
	<!--表名 -->
	<sql id="tableName">
		TB_DISPATCHING
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		ORDER_ID,	
		CREATE_BY,	
		CREATE_TIME,	
		CHECKED_BY,	
		CEHCKED_TIME,	
		MAINTENANCE_TECHNICIAN,	
		COMPLETION_TIME,	
		EXPECTED_COMPLETION_DATE,	
		INSPECT,	
		INSPECT_REMARK,	
		REMARK,	
		STATUS,	
		YL1,	
		YL2,	
		YL3,	
		YL4,
		YL5,
		YL6,
		YL7,
		YL8,
		YL9,
		YL10,
		YL11,	
		YL12,	
		YL13,	
		YL14,
		YL15,
		YL16,
		YL17,
		YL18,
		YL19,
		YL20,	
		DISPATCHING_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{ORDER_ID},	
		#{CREATE_BY},	
		#{CREATE_TIME},	
		#{CHECKED_BY},	
		#{CEHCKED_TIME},	
		#{MAINTENANCE_TECHNICIAN},	
		#{COMPLETION_TIME},	
		#{EXPECTED_COMPLETION_DATE},	
		#{INSPECT},	
		#{INSPECT_REMARK},	
		#{REMARK},	
		#{STATUS},	
		#{YL1},	
		#{YL2},	
		#{YL3},	
		#{YL4},
		#{YL5},
		#{YL6},	
		#{YL7},	
		#{YL8},	
		#{YL9},
		#{YL10},
		#{YL11},	
		#{YL12},	
		#{YL13},	
		#{YL14},
		#{YL15},
		#{YL16},	
		#{YL17},	
		#{YL18},	
		#{YL19},
		#{YL20},	
		#{DISPATCHING_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			DISPATCHING_ID = #{DISPATCHING_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			ORDER_ID = #{ORDER_ID},
			CREATE_BY = #{CREATE_BY},
			CREATE_TIME = #{CREATE_TIME},
			CHECKED_BY = #{CHECKED_BY},
			CEHCKED_TIME = #{CEHCKED_TIME},
			MAINTENANCE_TECHNICIAN = #{MAINTENANCE_TECHNICIAN},
			COMPLETION_TIME = #{COMPLETION_TIME},
			EXPECTED_COMPLETION_DATE = #{EXPECTED_COMPLETION_DATE},
			INSPECT = #{INSPECT},
			INSPECT_REMARK = #{INSPECT_REMARK},
			REMARK = #{REMARK},
			STATUS = #{STATUS},
			YL1 = #{YL1},
			YL2 = #{YL2},
			YL3 = #{YL3},
			YL4 = #{YL4},
			YL5 = #{YL5},
			YL6 = #{YL6},
			YL7 = #{YL7},
			YL8 = #{YL8},
			YL9 = #{YL9},
			YL10 = #{YL10},
			YL11 = #{YL11},
			YL12 = #{YL12},
			YL13 = #{YL13},
			YL14 = #{YL14},
			YL15 = #{YL15},
			YL16 = #{YL16},
			YL17 = #{YL17},
			YL18 = #{YL18},
			YL19 = #{YL19},
			YL20 = #{YL20},
		DISPATCHING_ID = DISPATCHING_ID
		where 
		DISPATCHING_ID = #{DISPATCHING_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			DISPATCHING_ID = #{DISPATCHING_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT * FROM
		(SELECT d.*,u.`NAME` as uName FROM tb_userinfo u,tb_dispatching d WHERE u.USERNAME = d.CREATE_BY) AS du
		LEFT JOIN
		(SELECT d.DISPATCHING_ID as cid,u.`NAME` as cName FROM tb_userinfo u,tb_dispatching d WHERE u.USERNAME = d.CHECKED_BY) as cn
		ON du.DISPATCHING_ID = cn.cid
		LEFT JOIN
		(SELECT d.DISPATCHING_ID as mid,u.`NAME` as mName FROM tb_userinfo u,tb_dispatching d WHERE u.USERNAME = d.MAINTENANCE_TECHNICIAN) as mn
		ON du.DISPATCHING_ID = mn.mid 
		LEFT JOIN
		(SELECT d.DISPATCHING_ID as iid,u.`NAME` as iName FROM tb_userinfo u,tb_dispatching d WHERE u.USERNAME = d.INSPECT) as nn
		ON du.DISPATCHING_ID = nn.iid  
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					du.ORDER_ID LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					du.CREATE_BY LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					du.CHECKED_BY LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					du.MAINTENANCE_TECHNICIAN LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					du.INSPECT LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					cn.cName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					du.uName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					mn.mName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or
					nn.iName LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.lastStart != null and pd.lastStart != '' and pd.lastEnd != null and pd.lastEnd != ''">
		and
			(
					du.CREATE_TIME &gt;= #{pd.lastStart} and
					du.CREATE_TIME &lt;= #{pd.lastEnd}
			)
		</if>
		<if test="pd.name!= null and pd.name != ''">
			and
				(
					du.STATUS LIKE CONCAT(CONCAT('%', #{pd.name}),'%')
				)
		</if>
		<if test="pd.YL10 != null and pd.YL10 != ''">
			and
				(
					du.YL10 = #{pd.YL10}
				)
		</if>
		<if test="pd.MAINTENANCE_TECHNICIAN != null and pd.MAINTENANCE_TECHNICIAN != ''">
			and
				(
					du.MAINTENANCE_TECHNICIAN =#{pd.MAINTENANCE_TECHNICIAN}
				)
		</if>
		order by du.CREATE_TIME desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			DISPATCHING_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<select id="findByCondition" parameterType="page" resultType="pd">
		SELECT
		*
		FROM 
		<include refid="tableName"></include>
		where
		1=1 
		<if test="pd.ORDER_ID != null and pd.ORDER_ID != ''">
			and ORDER_ID = #{pd.ORDER_ID}
		</if>
		<if test="pd.YL10 != null and pd.YL10 != ''">
			and YL10 = #{pd.YL10}
		</if>
		<if test="pd.STATUS != null and pd.STATUS != ''">
			and STATUS = #{pd.STATUS}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					YL12 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					YL11 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					YL13 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastStart != null and pd.lastStart != ''">
			and CREATE_TIME &gt;=  #{pd.lastStart }
		</if>
		<if test=" pd.lastEnd!=null and pd.lastEnd !=''">
			and CREATE_TIME &lt;=  #{pd.lastEnd }
		</if>
		<if test="pd.JISHI_NAME != null and pd.JISHI_NAME != ''">
			and MAINTENANCE_TECHNICIAN = #{pd.JISHI_NAME}
		</if>
		
		order by CREATE_TIME desc
	</select>
	
	
	<select id="statistics" parameterType="page" resultType="pd">
		SELECT
		YL7, SUM(YL4) as PRICE ,COUNT(*) as NUM
		FROM 
		<include refid="tableName"></include>
		where
		1=1 
		<if test="pd.YL10 != null and pd.YL10 != ''">
			and YL10 = #{pd.YL10}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					YL12 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					YL11 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					YL13 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastStart != null and pd.lastStart != ''">
			and CREATE_TIME &gt;=  #{pd.lastStart }
		</if>
		<if test="pd.status != null and pd.status != ''">
			and STATUS =  #{pd.status }
		</if>
		<if test=" pd.lastEnd!=null and pd.lastEnd !=''">
			and CREATE_TIME &lt;=  #{pd.lastEnd }
		</if>
		GROUP BY YL7
	</select>
	
	<select id="statisticsbycreate" parameterType="page" resultType="pd">
		SELECT
		CREATE_BY, COUNT(*) as NUM, SUM(YL4) as PRICE, YL2, YL7, MAINTENANCE_TECHNICIAN
		FROM 
		<include refid="tableName"></include>
		where
		1=1 
		<if test="pd.YL10 != null and pd.YL10 != ''">
			and YL10 = #{pd.YL10}
		</if>
		<if test="pd.YL7 != null and pd.YL7 != ''">
			and YL7 = #{pd.YL7}
		</if>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					YL12 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					or 
					YL11 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					or 
					YL13 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastStart != null and pd.lastStart != ''">
			and CREATE_TIME &gt;=  #{pd.lastStart }
		</if>
		<if test="pd.status != null and pd.status != ''">
			and STATUS =  #{pd.status }
		</if>
		<if test=" pd.lastEnd!=null and pd.lastEnd !=''">
			and CREATE_TIME &lt;=  #{pd.lastEnd }
		</if>
		GROUP BY YL2
	</select>
	
	
	<!-- fh313596790qq(青苔) -->
</mapper>